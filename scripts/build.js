#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('========================================');
console.log(' BUILD - Editor de Artigos');
console.log(' Blog Liberdade M√©dica');
console.log('========================================');
console.log('');

// Diret√≥rios
const rootDir = path.join(__dirname, '..');
const distDir = path.join(rootDir, 'dist');
const frontendDir = path.join(rootDir, 'frontend');
const backendDir = path.join(rootDir, 'backend');

// Limpar diret√≥rio dist
if (fs.existsSync(distDir)) {
    fs.rmSync(distDir, { recursive: true, force: true });
    console.log('‚úÖ Diret√≥rio dist limpo');
}

// Criar diret√≥rio dist
fs.mkdirSync(distDir, { recursive: true });
console.log('‚úÖ Diret√≥rio dist criado');

// Copiar arquivos do backend
const backendFiles = ['server.js'];
backendFiles.forEach(file => {
    const src = path.join(backendDir, file);
    const dest = path.join(distDir, file);
    if (fs.existsSync(src)) {
        fs.copyFileSync(src, dest);
        console.log(`‚úÖ Copiado: ${file}`);
    }
});

// Copiar arquivos do frontend
const frontendFiles = ['index.html', 'styles.css', 'app.js'];
frontendFiles.forEach(file => {
    const src = path.join(frontendDir, file);
    const dest = path.join(distDir, file);
    if (fs.existsSync(src)) {
        fs.copyFileSync(src, dest);
        console.log(`‚úÖ Copiado: ${file}`);
    }
});

// Copiar package.json
const packageSrc = path.join(rootDir, 'package.json');
const packageDest = path.join(distDir, 'package.json');
fs.copyFileSync(packageSrc, packageDest);
console.log('‚úÖ Copiado: package.json');

// Criar diret√≥rio data
const dataDir = path.join(distDir, 'data');
fs.mkdirSync(dataDir, { recursive: true });
console.log('‚úÖ Diret√≥rio data criado');

// Criar arquivo README para dist
const readmeContent = `# Editor de Artigos - Blog Liberdade M√©dica

## Como usar esta vers√£o:

1. Instale as depend√™ncias:
   \`\`\`
   npm install
   \`\`\`

2. Execute a aplica√ß√£o:
   \`\`\`
   npm start
   \`\`\`

3. Acesse: http://localhost:3000

## Arquivos inclu√≠dos:

- server.js: Servidor backend
- index.html: Interface principal
- styles.css: Estilos da aplica√ß√£o
- app.js: L√≥gica JavaScript
- package.json: Configura√ß√µes e depend√™ncias
- data/: Diret√≥rio para artigos locais

## Funcionalidades:

‚úÖ Cria√ß√£o de artigos com blocos modulares
‚úÖ Conex√£o com PostgreSQL (com fallback local)
‚úÖ Pr√©-visualiza√ß√£o em tempo real
‚úÖ Exporta√ß√£o de HTML
‚úÖ Salvamento de rascunhos
‚úÖ Interface responsiva

Gerado em: ${new Date().toLocaleString('pt-BR')}
`;

fs.writeFileSync(path.join(distDir, 'README.md'), readmeContent);
console.log('‚úÖ README.md criado');

console.log('');
console.log('========================================');
console.log(' BUILD CONCLU√çDO COM SUCESSO!');
console.log('========================================');
console.log('');
console.log(`üìÅ Arquivos gerados em: ${distDir}`);
console.log('');
console.log('Para testar:');
console.log('1. cd dist');
console.log('2. npm install');
console.log('3. npm start');
console.log('');
console.log('Para gerar execut√°vel:');
console.log('npm run build-exe');
console.log('========================================');
